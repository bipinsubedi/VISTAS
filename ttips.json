{
    "SCHTransp": "SCHTransp: boolean",
    "ThermMod": "ThermMod: boolean",
    "Noise": "Noise: boolean",
    "Parasitics": "Parasitics: boolean",
    "2D": "2D: boolean",
    "ni": "ni: int\n\nNumber of Bessel terms in the carrier radial series expansion",
    "storeN": "storeN: boolean",
    "odeSolver": "odeSolver: string\n\nCheck scipy.integrate.solve_ivp documentation for more details.",
    "tmax": "tmax: float\n\nFixed to 2^13*dt for small signal modulation.\nNumber of sample points is a power of two enable use of\nFast Fourier Transform (FFT) algorithm.",
    "dt": "dt: float\n\nThis time-step is used to define the parameter teval of solve_ivp, that is,\nit defines the spatial resolution for storing/plotting the results.",
    "dtFD":"dtFD: float\n\nFixed time-step for the Finite Differences solver.\nGenerally approximately one order of magnitude smaller than dt.\nOnce the computation is complete, the results are subsampled to dt",
    "modFormat": "modFormat: string\n\n'step': turn vcsel on from 0 to Ion.\n\n'pulse': step up from Ioff (steady-state as starting point) to Ion at t=0,\nand back down to Ioff at t=tmax/2\n\n'random bits': generate sequence of random bits of duration tb between\nIoff (steady-state as starting point) and Ion\n\n'small signal': apply small signal step to steady-state bias current Ion\nto compute the frequency response.\nSimulation time and number of time steps are hard-coded for best results.",
    "Ion": "Ion: float\n\n'low' current in selected modulation pattern.",
    "Ioff": "Ioff: float\n\n'high' current in selected pattern.",
    "Iss": "Iss: float\n\nAmplitude of small signal step, must be chosen small enough\nto remain in the VCSEL's linear operations range.",
    "tb": "tb: float\n\nDuration of a single on or off signal step.",
    "Uxyplot": "2Dmodes: boolean",
    "PIplot": "LIplot: boolean",
    "Ptplot": "Ptplot: boolean",
    "NSxyplot": "2Dprofiles: boolean",
    "RINplot": "RIN: boolean",
    "Hfplot": "MTF: boolean",
    "eyeplot": "eye: boolean",
    "vcselDescr": "vcselDescr: string\n",
    "r_ox": "r_ox: float\n\nOxide aperture, considered to delimit the 'active area' of the cavity.",
    "Leff": "Leff: float\n\nEffective cavity length, consisting approximately of the wavelength\nplus the penetration depth into the Distributed Bragg Reflectors (DBR).",
    "nqw": "nqw: float\n\nNumber of quantum wells, required to calculate the equivalent active volume.",
    "dqw": "dqw: float\n\nSingle quantum well thickness, required to calculate the equivalent active volume.",
    "db": "db: float\n\nThickness of the Single Confinement Heterostructure, required to compute transport into the QWs.",
    "wl0": "wl0: float\n",
    "nc": "nc: float\n",
    "ng": "ng: float\n",
    "delta_n": "delta_n: float\n",
    "Rt": "Rt: float\n",
    "Rb": "Rb: float\n",
    "alpha_i": "alpha_i: float\n",
    "tau_N": "tau_N: float\n",
    "beta": "beta: float\n",
    "gln": "gln: float\n",
    "Ntr": "Ntr: float\n",
    "epsilon": "epsilon: float\n",
    "Gam_r": "Gam_r: float\n\nAlso referred to as gain enhancement factor.\nNot to be mistaken with the longitudinal confinement factor Gam_z!",
    "tau_esc": "tau_esc: float\n",
    "tau_cap": "tau_cap: float\n",
    "eta_i": "eta_i: float\n",
    "rs": "rs: float\n",
    "DN": "DN: float\n"
}