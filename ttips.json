{
    "SCHtransp": "SCHtransp: boolean\n -----\n Essential mechanism affecting the dynamic behaviour of electrically pumped VCSELs.",
    "ThermMod": "ThermMod: boolean\n -----",
    "Noise": "Noise: boolean\n -----",
    "Parasitics": "Parasitics: boolean\n -----",
    "2D": "2D: boolean\n -----",
    "nNw": "nNw: int\n -----\n Number of Bessel terms in the carrier radial series expansion of the carrier density Nw in the QWs.",
    "storeN": "storeN: boolean\n -----",
    "odeSolver": "odeSolver: string\n -----\n Check scipy.integrate.solve_ivp documentation for more details.",
    "tmax": "tmax: float\n -----\n Fixed to 2^13*dt for small signal modulation (power of two\n to allow use of FFT algorithm).",
    "dt": "dt: float\n -----\n This time-step is used to define the parameter teval of solve_ivp, that is,\n it defines the spatial resolution for storing/plotting the results.",
    "dtFD":"dtFD: float\n -----\n Fixed time-step for the Finite Differences solver.\n Generally approximately one order of magnitude smaller than dt.\n Once the computation is complete, the results are subsampled to dt.",
    "modFormat": "modFormat: string\n -----\n 'step': turn vcsel on from 0 to Ion.\n 'pulse': step up from Ioff (steady-state as starting point) to Ion at t=0,\n and back down to Ioff at t=tmax/2\n 'random bits': generate sequence of random bits of duration tb\n between Ioff (steady-state as starting point) and Ion\n 'small signal': apply small signal step to steady-state bias current Ion\n to compute the frequency response. Simulation time and\n number of time steps are hard-coded for best results.",
    "Ion": "Ion: float\n -----\n 'high' current in selected modulation pattern.",
    "Ioff": "Ioff: float\n -----\n 'low' current in selected pattern.",
    "Iss": "Iss: float\n -----\n Amplitude of small signal step, must be chosen small enough\n to remain in the VCSEL's linear operations range.",
    "tb": "tb: float\n -----\n Duration of a single on or off signal step.",
    "Uxyplot": "2Dmodes: boolean\n -----",
    "PIplot": "LIplot: boolean\n -----",
    "Ptplot": "Ptplot: boolean\n -----",
    "NSxyplot": "2Dprofiles: boolean\n -----",
    "RINplot": "RIN: boolean\n -----",
    "Hfplot": "MTF: boolean\n -----",
    "Eyeplot": "eye: boolean\n -----",
    "vcselDescr": "vcselDescr: string\n -----\n ",
    "rox": "rox: float\n -----\n Oxide aperture, proxy to delimit the 'active area' of the cavity.",
    "Leff": "Leff: float\n -----\n Effective cavity length, consisting approximately of the wavelength\n plus the penetration depth into the Distributed Bragg Reflectors (DBR).",
    "nw": "nw: float\n -----\n Number of quantum wells, required to calculate the equivalent active volume.",
    "dw": "dw: float\n -----\n Single quantum well thickness, required to calculate the equivalent active volume.",
    "db": "db: float\n -----\n Barrier thickness (Single Confinement Heterostructure), required to compute transport into the QWs.",
    "wl0": "wl0: float\n -----\n ",
    "nc": "nc: float\n -----\n ",
    "ng": "ng: float\n -----\n ",
    "dn": "dn: float\n -----\n ",
    "Rt": "Rt: float\n -----\n ",
    "Rb": "Rb: float\n -----\n ",
    "alphai": "alphai: float\n -----\n ",
    "beta": "beta: float\n -----\n ",
    "gln": "gln: float\n -----\n ",
    "Ntr": "Ntr: float\n -----\n ",
    "epsilon": "epsilon: float\n -----\n ",
    "GamR": "GamR: float\n -----\n Also referred to as gain enhancement factor.\n Not to be mistaken with the longitudinal confinement factor Gam_z!",
    "tauNb": "tauNb: float\n -----\n Carrier lifetime in the barriers (SCH)",
    "tauNw": "tauNw: float\n -----\n ",
    "tauEsc": "tauEsc: float\n -----\n ",
    "tauCap": "tauCap: float\n -----\n ",
    "etai": "etai: float\n -----\n ",
    "rs": "rs: float\n -----\n ",
    "DN": "DN: float\n -----\n "
}